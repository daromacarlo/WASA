openapi: 3.0.3
info:
  title: WASAtext API specification
  description: |-
    Questo documento OpenApi descrive le API necessarie a WASAText.
  version: "1"
  
  
paths:
  /wasachat:
    post:
      tags: ["Login"]
      summary: Logs in the user
      description: |-
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Carlo"
                  minLength: 1
                  description: nome utente
        required: true
      responses:
        '201':
          description: Accesso avvenuto con successo
        '400':
          description: Errore generico lato utente
        '404':
          description: Nome utente non esiste nel database, accesso non effettuato
        '500':
          description: Errore interno del server. Riprovare più tardi.
                        
  /wasachat/{utente}/chats: 
    parameters:
    - name: utente
      in: path
      required: true
      description: è il nickname dell'utente
      schema:
        type: string
        example: Carlo
    get:
      tags: ["Schermata principale"]
      summary: "Visualizza conversazioni"
      description: |-
        Restituisce al client la lista delle sue conversazioni
        in ordine cronologico inverso.
      operationId: getMyConversation
      responses:
        "200":
          description: Schermata principale visualizzata correttamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        chat_id:
                          type: integer
                          example: 21
                        nome:
                          type: string
                          example: "informatica 2024-2025"
                        foto:
                          type: string
                          format: binary
                          description: "Foto profilo utente/foto gruppo."
                        time:
                          type: string
                          format: date-time
                          description: "Data e ora dell'ultimo messaggio."
                        ultimosnip:
                          type: string
                          description: "Il contenuto del messaggio come testo, se l'ultimo messaggio è una foto viene scritto 'foto'."
                          example: "AE"
        "400":
          description: Errore lato client; dice che l'array non deve essere opzionale
        '404':
          description: Nome utente non esiste nel database
        '500':
          description: Errore interno del server. Riprovare più tardi.

  /wasachat/{utente}/nome:
    parameters:
    - name: utente
      in: path
      required: true
      description: è il nickname dell'utente
      schema:
        type: string
        example: Carlo
    put:
      tags: ["Modifica Profilo utente"]
      summary: settare user name
      description: |-
        Se l'user name non esiste, viene creato. Se esiste già un user name, viene sovrascritto se diverso dal precedente.
      operationId: setMyUserName
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  minLength: 1
                  example: "daromacarlo"
      responses:
        "200":
          description: Il nuovo username è uguale al vecchio, nessuna modifica applicata.
        "201":
          description: Il nuovo username è stato settato.
        "400":
          description: Errore lato client.
        "404":
          description: L'utente non esiste.
        "406":
          description: Nome utente già in uso
        "500":
          description: Errore lato server.
          
  /wasachat/{utente}/foto:
    parameters:
    - name: utente
      in: path
      required: true
      description: è il nickname dell'utente
      schema:
        type: string
        example: Carlo
    put:
      tags: ["Modifica Profilo utente"]
      summary: settare foto profilo
      description: |-
        Se l'utente ha già una foto profilo, questa viene aggiornata con quella nuova fornita, altrimenti viene settata la nuova foto.
      operationId: setMyPhoto
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                foto:
                  type: string
                  example: "/home/foto/fotobellabellissima.png"
      responses:
        "201":
          description: La nuova foto è stata settata.
        "400":
          description: Errore lato client.
        "404":
          description: L'utente non esiste.
        "500":
          description: Errore lato server.
          
  /wasachat/{utente}/chats/gruppi/{chat}/aggiungi:
    parameters:
      - name: utente
        in: path
        required: true
        description: è il nickname dell'utente
        schema:
          type: string
          example: Carlo
      - name: chat
        in: path
        required: true
        description: è l'id del gruppo
        schema:
          type: integer
          example: 1
    post:
      tags: ["Chat"]
      summary: 
        aggiunge l'utente a un gruppo
      description: |-
        aggiunge l'utente al gruppo selezionato
      operationId:
        addToGroup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                utente:
                  type: string
                  example: "Luigi"
      responses:
        "200": 
          description:
            utente già presente nel gruppo, non sono state apportate modifiche.
        "201":
          description: utente aggiunto al gruppo.
        "400":
          description: Errore lato client.
        "404":
          description: L'utente non esiste chiamante o l'utente da aggiungere non esiste.
        "406":
          description: La chat passata non esiste o non è un gruppo
        "500":
          description: Errore lato server.
            
  /wasachat/{utente}/chats/{chat}:
    parameters:
      - name: utente
        in: path
        required: true
        description: È il nickname dell'utente
        schema:
          type: string
          example: Carlo
      - name: chat
        in: path
        required: true
        description: È l'ID della chat o del gruppo
        schema:
          type: integer
          example: 1
    delete:
      tags: ["Chat"]
      summary: uscire dal gruppo
      description: uscire dal gruppo selezionato
      operationId: leaaveGroup
      responses:
        "200":
          description: sei uscito correttamente dal gruppo
        "400":
          description: uscita dal gruppo non riuscita a causa di un errore lato client
        "404":
          description: l'utente o il gruppo non esiste
        "406":
          description: la chat passata non è un gruppo o l'utente non è coinvolto in questa chat
        "500":
          description: uscita dal gruppo non riuscita a causa di un errore lato server
    get:
      tags: ["Chat"]
      summary: Restituisce i messaggi della chat
      description: |-
        Restituisce i messaggi scambiati nella chat in ordine cronologico inverso.
      operationId: getConversation
      responses:
        "200":
          description: Chat restituita correttamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        message_id:
                          type: integer
                          description: "ID univoco del messaggio."
                          example: 12345
                        autore:
                          type: string
                          description: "Nickname dell'autore del messaggio."
                          example: "Luigi"
                        text:
                          type: string
                          description: "Il contenuto del messaggio come testo."
                          example: "Sei libero sabato?"
                        foto:
                          type: string
                          description: "Percorso o URL dell'immagine allegata al messaggio."
                          example: "/home/foto/messaggio.png"
                        time:
                          type: string
                          format: date-time
                          description: "Timestamp del messaggio nel formato ISO 8601."
                          example: "2025-03-15T14:30:00Z"
                        ricevuto:
                          type: boolean
                          description: "Indica se il messaggio è stato ricevuto dal destinatario."
                          example: true
                        letto:
                          type: boolean
                          description: "Indica se il messaggio è stato letto dal destinatario."
                          example: false
                        commenti:
                          type: array
                          description: "Lista dei commenti associati al messaggio."
                          items:
                            type: object
                            properties:
                              comment_id:
                                type: integer
                                description: "ID univoco del commento."
                                example: 56789
                              autore:
                                type: string
                                description: "Nickname dell'autore del commento."
                                example: "Marco"
                              reazione:
                                type: string
                                description: "Tipo di reazione o emoji associata al commento."
                                example: "👍"
                        inoltrato:
                          type: boolean
                          description: "Indica se il messaggio è stato inoltrato da un'altra conversazione."
                          example: true
                        risposta:
                          type: integer
                          description: "ID del messaggio originale a cui si sta rispondendo."
                          example: 9876
        "400":
          description: Errore lato client (richiesta errata o parametri mancanti).
        "404":
          description: L'utente o la chat non esistono.
        "500":
          description: Errore lato server.
    post:
      tags: ["Chat"]
      summary: "Invia un messaggio"
      description: "Invia un messaggio di testo o foto nella chat selezionata."
      operationId: sendMessage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                testo:
                  type: string
                  description: "Il contenuto del messaggio come testo."
                  example: "Ti va di uscire insieme questo venerdì?"
                foto:
                  type: string
                  description: "Percorso file della foto."
                  example: "/home/foto/bellafoto.png"
      responses:
        "200":
          description: "Messaggio inviato con successo."
        "400":
          description: "Il messaggio non è stato inviato a causa di un errore lato cliente."
        "404":
          description: "La chat non esiste, l'utente non esiste, o l'utente non è coinvolto nella chat."
        "500":
          description: "Il messaggio non è stato inviato a causa di un errore lato server."

  /wasachat/{utente}/inoltra/{nuovachat}/{messaggio}:
    parameters:
      - name: utente
        in: path
        required: true
        description: è il nickname del chiamante
        schema:
          type: string
          example: Carlo
      - name: nuovachat
        in: path
        required: true
        description: è l'id della chat in cui si vuole inoltrare il messaggio
        schema:
          type: number
          example: 4235782
      - name: messaggio
        in: path
        required: true
        description: è l'id del messaggio da inviare
        schema:
          type: number
          example: 4212
    post:
      tags: ["Chat"]
      summary:
        inoltra il messaggio 
      description: |-
        invia nella chat selezionata il messaggio selezionato
      operationId:
        forwardMessage
      responses:
        "200": 
          description: 
            messaggio inoltrato
        "400": 
          description:
            messaggio non inoltrato causa problematiche lato client
        "404":
          description:
            l'utente non esiste o la chat non esiste
        "406":
          description:
            l'utente non può accedere al messaggio passato
        "500":
          description:
            messaggio non inoltrato causa problematiche lato server
            
  /wasachat/{utente}/chats/{chat}/messaggi/{messaggio}:
    parameters:
    - name: utente
      in: path
      required: true
      description: è il nickname del chiamante
      schema:
        type: string
        example: Carlo
    - name: chat
      in: path
      required: true
      description: è l'id della chat
      schema:
        type: number
        example: 4235782
    - name: messaggio
      in: path
      required: true
      description: è l'id del messaggio da inviare
      schema:
        type: number
        example: 4212
    delete:
      tags: ["Chat"]
      summary:
        elimina il messaggio
      description:
        elimina il messaggio selezionato
      operationId: 
        deleteMessage
      responses:
        "200":
          description: messaggio eliminato correttamente
        "400": 
          description:
            messaggio non eliminato causa problematiche lato client
        "404":
          description:
            l'utente non esiste, la chat o il messaggio non esiste
        "406":
          description:
            l'utente non può accedere al messaggio passato
        "500":
          description:
            messaggio non eliminato causa problematiche lato server
            
  /wasachat/{utente}/messaggi/{messaggio}:
    parameters:
    - name: utente
      in: path
      required: true
      description: è il nickname del chiamante
      schema:
        type: string
        example: Carlo
    - name: messaggio
      in: path
      required: true
      description: è l'id del messaggio a cui rispondere
      schema:
        type: number
        example: 4212
    put:
      tags: ["Chat"]
      summary: commentare messaggio
      description: aggiungere un commento al messaggio selezionato
      operationId: CommentMessage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contenuto:
                  oneOf:
                  - type: string
                    description: "Il contenuto del commento come testo"
                    example: "👍"
                  - type: string
                    format: binary
                    description: "Il contenuto del messaggio come immagine (in formato binario)"
      responses:
        "200": 
          description: messaggio commentato
        "400": 
          description:
            messaggio non commentato causa problematiche lato client
        "404":
          description:
            l'utente non esiste, la chat o il messaggio non esiste
        "406":
          description:
            l'utente non può accedere al messaggio passato
        "500":
          description:
            messaggio non commentato causa problematiche lato server
            
  /wasachat/{utente}/messaggi/{commento}:
    parameters:
    - name: utente
      in: path
      required: true
      description: è il nickname del chiamante
      schema:
        type: string
        example: Carlo
    - name: commento
      in: path
      required: true
      description: è l'id del commento da eliminare
      schema:
        type: number
        example: 4212
    delete:
      tags: ["Chat"]
      summary: "Rimuovere un commento da un messaggio"
      description: "Elimina il commento associato al messaggio selezionato."
      operationId: deleteComment
      responses:
        "200":
          description: "Commento eliminato con successo."
        "400":
          description: "Errore nella richiesta (problema lato client)."
        "404":
          description: "Commento o messaggio non trovato."
        "406":
          description: "L'utente non può accedere al commento"
        "500":
          description: "Errore interno del server durante l'eliminazione del commento."
          
  /wasachat/{utente}/gruppi/{chat}/nome:
    parameters:
    - name: utente
      in: path
      required: true
      description: è il nickname del chiamante
      schema:
        type: string
        example: Carlo
    - name: chat
      in: path
      required: true
      description: è l'id della chat a cui cambiare il nome
      schema:
        type: number
        example: 4212
    put:
      tags: ["Modifica gruppo"]
      summary: Settare nome gruppo
      description: |-
        Se il gruppo ha già un nome, questo viene aggiornato con quello nuovo se il nome è differente dal precedente, 
        altrimenti viene settato il nuovo nome.
      operationId: setGroupName
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: "informatica 2024-2025"
      responses:
        "200":
          description: Nome gruppo settato.
        "201":
          description: Il nome è uguale al precedente, non sono state apportate modifiche.
        "400":
          description: Errore lato client.
        "404":
          description: La chat non esiste o l'utente non è coinvolto
        "406":
          description: La chat passata non è un gruppo
        "500":
          description: Errore lato server.
          
  /wasachat/{groupid}/impostazioni/foto:  
    parameters:
    - name: groupid
      in: path
      required: true
      description: è l'id del gruppo
      schema:
        type: number
        example: 2
    put:
      tags: ["Modifica gruppo"]
      summary: Settare foto gruppo
      description: |-
        Se il gruppo ha già una foto profilo, questa viene aggiornata con quella nuova fornita, altrimenti viene settata la nuova foto.
      operationId: setGroupPhoto
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                foto:
                  type: string
                  description: il percorso della nuova foto.
                  example: "/home/foto/fotogruppo.png"
      responses:
        "200":
          description: Foto gruppo settata.
        "400":
          description: Errore lato client.
        "404":
          description: La chat non esiste o l'utente non è coinvolto
        "406":
          description: La chat passata non è un gruppo
        "500":
          description: Errore lato server.