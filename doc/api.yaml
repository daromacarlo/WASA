openapi: 3.0.3
info:
  title: Specifica API WASAtext
  description: |-
    Questo documento OpenApi descrive le API necessarie a WASAText.
  version: "1.0.0"
tags:
  - name: Autenticazione
    description: Operazioni di autenticazione e gestione utente
  - name: Schermata Principale
    description: Operazioni relative alla schermata principale
  - name: Profilo Utente
    description: Operazioni di gestione del profilo utente
  - name: Chat
    description: Operazioni relative alle chat e ai messaggi
  - name: Gestione Gruppi
    description: Operazioni di gestione dei gruppi

paths:
  /wasachat:
    post:
      tags: ["Autenticazione"]
      summary: Login utente
      description: |-
        Se l'utente non esiste, viene creato e viene restituito un identificatore.
        Se l'utente esiste, viene restituito il suo identificatore.
      operationId: effettuaLogin
      requestBody:
        description: Dettagli utente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichiestaLogin'
        required: true
      responses:
        '201':
          description: Accesso avvenuto con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaLogin'
        '400':
          description: Errore generico lato utente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        '404':
          description: Nome utente non esiste nel database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        '500':
          description: Errore interno del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'

  /wasachat/{utente}/chats:
    parameters:
    - name: utente
      in: path
      required: true
      description: Nickname dell'utente
      schema:
        type: string
        example: "Carlo"
        minLength: 1
        maxLength: 50
        pattern: '^[a-zA-Z0-9_]+$'
    get:
      tags: ["Schermata Principale"]
      summary: "Visualizza conversazioni"
      description: |-
        Restituisce la lista delle conversazioni dell'utente
        in ordine cronologico inverso.
      operationId: ottieniConversazioni
      responses:
        "200":
          description: Schermata principale visualizzata correttamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaConversazioni'
              example:
                chats:
                  - chat_id: 21
                    nome: "informatica 2024-2025"
                    foto: "base64encodedimage"
                    time: "2025-03-15T14:30:00Z"
                    ultimosnip: "AE"
                    isgruppo: false
        "400":
          description: Errore lato client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "404":
          description: Utente non trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "500":
          description: Errore interno del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'

  /wasachat/{utente}/nome:
    parameters:
    - name: utente
      in: path
      required: true
      description: Nickname dell'utente
      schema:
        type: string
        example: "Carlo"
        minLength: 1
        maxLength: 50
        pattern: '^[a-zA-Z0-9_]+$'
    put:
      tags: ["Profilo Utente"]
      summary: Modifica nome utente
      description: |-
        Imposta o modifica il nome utente.
      operationId: modificaNomeUtente
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichiestaNomeUtente'
        required: true
      responses:
        "200":
          description: Nome aggiornato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaGenerica'
        "400":
          description: Errore lato client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "404":
          description: Utente non trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "500":
          description: Errore interno del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'

  /wasachat/{utente}/foto:
    parameters:
    - name: utente
      in: path
      required: true
      description: Nickname dell'utente
      schema:
        type: string
        example: "Carlo"
        minLength: 1
        maxLength: 50
        pattern: '^[a-zA-Z0-9_]+$'
    put:
      tags: ["Profilo Utente"]
      summary: Modifica foto profilo
      description: |-
        Imposta o modifica la foto profilo dell'utente.
      operationId: modificaFotoProfilo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichiestaFotoProfilo'
        required: true
      responses:
        "200":
          description: Foto aggiornata con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaGenerica'
        "400":
          description: Errore lato client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "404":
          description: Utente non trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "500":
          description: Errore interno del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'

  /wasachat/{utente}/chats/gruppi/{chat}/aggiungi:
    parameters:
      - name: utente
        in: path
        required: true
        description: Nickname dell'utente
        schema:
          type: string
          example: "Carlo"
          minLength: 1
          maxLength: 50
          pattern: '^[a-zA-Z0-9_]+$'
      - name: chat
        in: path
        required: true
        description: ID del gruppo
        schema:
          type: integer
          example: 1
          minimum: 1
          maximum: 999999999999
    post:
      tags: ["Gestione Gruppi"]
      summary: Aggiungi utente al gruppo
      description: |-
        Aggiunge un utente al gruppo specificato.
      operationId: aggiungiUtenteAlGruppo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichiestaAggiungiUtente'
        required: true
      responses:
        "200":
          description: Utente aggiunto con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaGenerica'
        "400":
          description: Errore lato client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "404":
          description: Utente o gruppo non trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "500":
          description: Errore interno del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'

  /wasachat/{utente}/chats/{chat}:
    parameters:
      - name: utente
        in: path
        required: true
        description: Nickname dell'utente
        schema:
          type: string
          example: "Carlo"
          minLength: 1
          maxLength: 50
          pattern: '^[a-zA-Z0-9_]+$'
      - name: chat
        in: path
        required: true
        description: ID della chat
        schema:
          type: integer
          example: 1
          minimum: 1
          maximum: 999999999999
    get:
      tags: ["Chat"]
      summary: Ottieni messaggi chat
      description: |-
        Restituisce i messaggi della chat specificata.
      operationId: ottieniMessaggiChat
      responses:
        "200":
          description: Messaggi restituiti con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaMessaggiChat'
        "400":
          description: Errore lato client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "404":
          description: Chat non trovata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "500":
          description: Errore interno del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
    post:
      tags: ["Chat"]
      summary: Invia messaggio
      description: |-
        Invia un messaggio nella chat specificata.
      operationId: inviaMessaggio
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichiestaMessaggio'
        required: true
      responses:
        "200":
          description: Messaggio inviato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaGenerica'
        "400":
          description: Errore lato client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "404":
          description: Chat non trovata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "500":
          description: Errore interno del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
    delete:
      tags: ["Gestione Gruppi"]
      summary: Esci dal gruppo
      description: |-
        L'utente esce dal gruppo specificato.
      operationId: esciDalGruppo
      responses:
        "200":
          description: Uscita dal gruppo avvenuta con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaGenerica'
        "400":
          description: Errore lato client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "404":
          description: Gruppo non trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "500":
          description: Errore interno del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'

  /wasachat/{utente}/inoltro/{nuovachat}/messaggi/{messaggio}:
    parameters:
      - name: utente
        in: path
        required: true
        description: Nickname dell'utente
        schema:
          type: string
          example: "Carlo"
          minLength: 1
          maxLength: 50
          pattern: '^[a-zA-Z0-9_]+$'
      - name: nuovachat
        in: path
        required: true
        description: ID della chat di destinazione
        schema:
          type: integer
          example: 4235782
          minimum: 1
          maximum: 99999999999
      - name: messaggio
        in: path
        required: true
        description: ID del messaggio da inoltrare
        schema:
          type: integer
          example: 4212
          minimum: 1
          maximum: 99999999999
    post:
      tags: ["Chat"]
      summary: Inoltra messaggio
      description: |-
        Inoltra un messaggio a un'altra chat.
      operationId: inoltraMessaggio
      responses:
        "200":
          description: Messaggio inoltrato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaGenerica'
        "400":
          description: Errore lato client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "404":
          description: Messaggio o chat non trovati
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "500":
          description: Errore interno del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'

  /wasachat/{utente}/chats/{chat}/messaggi/{messaggio}:
    parameters:
    - name: utente
      in: path
      required: true
      description: Nickname dell'utente
      schema:
        type: string
        example: "Carlo"
        minLength: 1
        maxLength: 50
        pattern: '^[a-zA-Z0-9_]+$'
    - name: chat
      in: path
      required: true
      description: ID della chat
      schema:
        type: integer
        example: 4235782
        minimum: 1
        maximum: 99999999999
    - name: messaggio
      in: path
      required: true
      description: ID del messaggio
      schema:
        type: integer
        example: 4212
        minimum: 1
        maximum: 99999999999
    delete:
      tags: ["Chat"]
      summary: Elimina messaggio
      description: |-
        Elimina un messaggio dalla chat.
      operationId: eliminaMessaggio
      responses:
        "200":
          description: Messaggio eliminato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaGenerica'
        "400":
          description: Errore lato client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "404":
          description: Messaggio non trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "500":
          description: Errore interno del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'

  /wasachat/{utente}/messaggi/{messaggio}:
    parameters:
    - name: utente
      in: path
      required: true
      description: Nickname dell'utente
      schema:
        type: string
        example: "Carlo"
        minLength: 1
        maxLength: 50
        pattern: '^[a-zA-Z0-9_]+$'
    - name: messaggio
      in: path
      required: true
      description: ID del messaggio
      schema:
        type: integer
        example: 4212
        minimum: 1
        maximum: 99999999999
    put:
      tags: ["Chat"]
      summary: Commenta messaggio
      description: |-
        Aggiunge un commento a un messaggio.
      operationId: commentaMessaggio
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichiestaCommento'
        required: true
      responses:
        "200":
          description: Commento aggiunto con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaGenerica'
        "400":
          description: Errore lato client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "404":
          description: Messaggio non trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "500":
          description: Errore interno del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
    delete:
      tags: ["Chat"]
      summary: Elimina commento
      description: |-
        Elimina un commento da un messaggio.
      operationId: eliminaCommento
      responses:
        "200":
          description: Commento eliminato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaGenerica'
        "400":
          description: Errore lato client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "404":
          description: Commento non trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "500":
          description: Errore interno del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'

  /wasachat/{utente}/gruppi/{chat}/nome:
    parameters:
    - name: utente
      in: path
      required: true
      description: Nickname dell'utente
      schema:
        type: string
        example: "Carlo"
        minLength: 1
        maxLength: 50
        pattern: '^[a-zA-Z0-9_]+$'
    - name: chat
      in: path
      required: true
      description: ID del gruppo
      schema:
        type: integer
        example: 4212
        minimum: 1
        maximum: 99999999999
    put:
      tags: ["Gestione Gruppi"]
      summary: Modifica nome gruppo
      description: |-
        Modifica il nome del gruppo specificato.
      operationId: modificaNomeGruppo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichiestaNomeGruppo'
        required: true
      responses:
        "200":
          description: Nome gruppo modificato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaGenerica'
        "400":
          description: Errore lato client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "404":
          description: Gruppo non trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "500":
          description: Errore interno del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'

  /wasachat/{groupid}/impostazioni/foto:
    parameters:
    - name: groupid
      in: path
      required: true
      description: ID del gruppo
      schema:
        type: integer
        example: 2
        minimum: 1
        maximum: 99999999999
    put:
      tags: ["Gestione Gruppi"]
      summary: Modifica foto gruppo
      description: |-
        Modifica la foto del gruppo specificato.
      operationId: modificaFotoGruppo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichiestaFotoGruppo'
        required: true
      responses:
        "200":
          description: Foto gruppo modificata con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RispostaGenerica'
        "400":
          description: Errore lato client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "404":
          description: Gruppo non trovato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'
        "500":
          description: Errore interno del server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroreGenerico'

components:
  schemas:
    RichiestaLogin:
      type: object
      description: Dati richiesti per il login
      required:
        - name
      properties:
        name:
          type: string
          description: Nome utente per il login
          example: "Carlo"
          minLength: 1
          maxLength: 50
          pattern: '^[a-zA-Z0-9_]+$'

    RispostaLogin:
      description: Risposta per login avvenuto con successo

    RispostaConversazioni:
      description: Elenco delle conversazioni dell'utente
      required:
        - chats
      properties:
        chats:
          type: array
          description: Lista delle conversazioni
          minItems: 0
          maxItems: 1000
          items:
            $ref: '#/components/schemas/RiepilogoConversazione'

    RiepilogoConversazione:
      type: object
      description: Dettagli di una singola conversazione
      properties:
        chat_id:
          type: integer
          description: ID univoco della chat
          example: 21
          minimum: 1
          maximum: 999999999999
        nome:
          type: string
          description: Nome della chat o gruppo
          example: "informatica 2024-2025"
          minLength: 1
          maxLength: 100
          pattern: '^[a-zA-Z0-9_ -]+$'
        foto:
          type: string
          format: binary
          description: Immagine del profilo o foto del gruppo in formato base64
          minLength: 1
          maxLength: 1048576
        time:
          type: string
          format: date-time
          description: Data e ora dell'ultimo messaggio in formato ISO 8601
          minLength: 20
          maxLength: 30
        ultimosnip:
          type: string
          description: Anteprima dell'ultimo messaggio
          example: "AE"
          minLength: 0
          maxLength: 1000
          pattern: '^[\s\S]*$'
        isgruppo:
          type: boolean
          description: Indica se si tratta di una chat di gruppo
          example: false

    RichiestaNomeUtente:
      type: object
      description: Richiesta per modificare il nome utente
      required:
        - nome
      properties:
        nome:
          type: string
          description: Nuovo nome utente
          example: "daromacarlo"
          minLength: 1
          maxLength: 50
          pattern: '^[a-zA-Z0-9_]+$'

    RichiestaFotoProfilo:
      type: object
      description: Richiesta per modificare la foto profilo
      required:
        - foto
      properties:
        foto:
          type: string
          description: Contenuto base64 della nuova foto
          example: "dadasjbdajsvdjashvfjavfhvasja--"
          minLength: 1
          maxLength: 1048576

    RichiestaAggiungiUtente:
      type: object
      description: Richiesta per aggiungere un utente a un gruppo
      required:
        - utente_da_aggiungere
      properties:
        utente_da_aggiungere:
          type: string
          description: Nickname dell'utente da aggiungere
          example: "Luigi"
          minLength: 1
          maxLength: 50
          pattern: '^[a-zA-Z0-9_]+$'

    RispostaMessaggiChat:
      type: object
      description: Elenco dei messaggi in una chat
      required:
        - messages
      properties:
        messages:
          type: array
          description: Lista dei messaggi
          minItems: 0
          maxItems: 1000
          items:
            $ref: '#/components/schemas/Messaggio'

    Messaggio:
      type: object
      description: Dettagli di un singolo messaggio
      required:
        - message_id
        - autore
        - time
        - ricevuto
        - letto
        - commenti
        - inoltrato
      properties:
        message_id:
          type: integer
          description: ID univoco del messaggio
          example: 12345
          minimum: 1
          maximum: 99999999999
        autore:
          type: string
          description: Nickname dell'autore del messaggio
          example: "Luigi"
          minLength: 1
          maxLength: 50
          pattern: '^[a-zA-Z0-9_]+$'
        text:
          type: string
          description: Contenuto testuale del messaggio
          example: "Sei libero sabato?"
          minLength: 1
          maxLength: 1000
          pattern: '^[\s\S]*$'
        foto:
          type: string
          description: Percorso o contenuto base64 dell'immagine allegata
          example: "/home/foto/messaggio.png"
          minLength: 1
          maxLength: 1048576
        time:
          type: string
          format: date-time
          description: Timestamp del messaggio in formato ISO 8601
          example: "2025-03-15T14:30:00Z"
          minLength: 20
          maxLength: 30
        ricevuto:
          type: boolean
          description: Indica se il messaggio è stato ricevuto
          example: true
        letto:
          type: boolean
          description: Indica se il messaggio è stato letto
          example: false
        commenti:
          type: array
          description: Lista dei commenti associati al messaggio
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/Commento'
        inoltrato:
          type: boolean
          description: Indica se il messaggio è stato inoltrato
          example: true
        risposta:
          type: integer
          description: ID del messaggio a cui si sta rispondendo
          example: 9876
          minimum: 1
          maximum: 99999999999

    RichiestaMessaggio:
      type: object
      description: Richiesta per inviare un messaggio
      properties:
        testo:
          type: string
          description: Contenuto testuale del messaggio
          example: "Ti va di uscire insieme questo venerdì?"
          minLength: 1
          maxLength: 1000
          pattern: '^[\s\S]*$'
        foto:
          type: string
          description: Percorso o contenuto base64 dell'immagine da allegare
          example: "/home/foto/bellafoto.png"
          minLength: 1
          maxLength: 1048576

    RichiestaCommento:
      type: object
      description: Richiesta per aggiungere un commento
      required:
        - contenuto
      properties:
        contenuto:
          type: string
          description: Contenuto del commento (testo o emoji)
          example: "👍"
          minLength: 1
          maxLength: 1000
          pattern: '^[\p{Emoji}\p{So}\s]+$'

    Commento:
      type: object
      description: Dettagli di un singolo commento
      required:
        - comment_id
        - autore
        - reazione
      properties:
        comment_id:
          type: integer
          description: ID univoco del commento
          example: 56789
          minimum: 1
          maximum: 99999999999
        autore:
          type: string
          description: Nickname dell'autore del commento
          example: "Marco"
          minLength: 1
          maxLength: 50
          pattern: '^[a-zA-Z0-9_]+$'
        reazione:
          type: string
          description: Contenuto del commento (emoji o testo breve)
          example: "👍"
          minLength: 1
          maxLength: 10
          pattern: '^[\p{Emoji}\p{So}\s]+$'

    RichiestaNomeGruppo:
      type: object
      description: Richiesta per modificare il nome di un gruppo
      required:
        - nome
      properties:
        nome:
          type: string
          description: Nuovo nome del gruppo
          example: "informatica 2024-2025"
          minLength: 1
          maxLength: 100
          pattern: '^[a-zA-Z0-9_ -]+$'

    RichiestaFotoGruppo:
      type: object
      description: Richiesta per modificare la foto di un gruppo
      required:
        - foto
      properties:
        foto:
          type: string
          description: Contenuto base64 della nuova foto
          example: "fasfgasdkjfvashfadsfvhjfasfbashbvdfj--"
          minLength: 1
          maxLength: 1048576

    RispostaGenerica:
      description: Risposta generica per operazioni riuscite
      example: "Nome gruppo cambiato con successo"

    ErroreGenerico:
      description: Risposta per errori generici
      example: "Errore lato client"